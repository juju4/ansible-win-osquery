version: 0.1.x.{build}
skip_commits:
  message: /^\(?doc|travis\)?.*/
clone_depth: 10
init:
- SET
- 'echo System architecture: %PLATFORM%'
- 'echo %APPVEYOR_REPO_NAME%'

environment:
  winrm_user: winrm_test_user
  winrm_password: WinRM_test_Pass@w0rd1
  user_cert: c:\projects\ansible-win-osquery\user.pem
  user_key: c:\projects\ansible-win-osquery\key.pem
  user_pfx: c:\projects\ansible-win-osquery\user.pfx
  CYGWIN: winsymlinks:nativestrict

  matrix:
  - SUITE: default
    ANSIBLE_VERSION: 2.8.1
    ANSIBLE_EXTRA_VARS:
    TARGET: cygwin64
    CYG_ROOT: C:\cygwin64
    CYG_SETUP: C:\cygwin64\setup-x86_64.exe
    CYG_CACHE: C:\cygwin64\var\cache\setup
    CYG_BASH: C:\cygwin64\bin\sh
  - SUITE: default-msi
    ANSIBLE_VERSION: 2.8.1
    ANSIBLE_EXTRA_VARS:
    TARGET: cygwin64
    CYG_ROOT: C:\cygwin64
    CYG_SETUP: C:\cygwin64\setup-x86_64.exe
    CYG_CACHE: C:\cygwin64\var\cache\setup
    CYG_BASH: C:\cygwin64\bin\sh
  - SUITE: default-noevents
    ANSIBLE_VERSION: 2.8.1
    ANSIBLE_EXTRA_VARS:
    TARGET: cygwin64
    CYG_ROOT: C:\cygwin64
    CYG_SETUP: C:\cygwin64\setup-x86_64.exe
    CYG_CACHE: C:\cygwin64\var\cache\setup
    CYG_BASH: C:\cygwin64\bin\sh
  - SUITE: default
    ANSIBLE_VERSION: 2.8.1
    ANSIBLE_EXTRA_VARS: "-e win_osquery_enable_winevtx_logging=false"
    TARGET: cygwin64
    CYG_ROOT: C:\cygwin64
    CYG_SETUP: C:\cygwin64\setup-x86_64.exe
    CYG_CACHE: C:\cygwin64\var\cache\setup
    CYG_BASH: C:\cygwin64\bin\sh
  - SUITE: default
    ANSIBLE_VERSION: 2.7.11
    ANSIBLE_EXTRA_VARS:
    TARGET: cygwin64
    CYG_ROOT: C:\cygwin64
    CYG_SETUP: C:\cygwin64\setup-x86_64.exe
    CYG_CACHE: C:\cygwin64\var\cache\setup
    CYG_BASH: C:\cygwin64\bin\sh
matrix:
  fast_finish: true

install:
# setup winrm
- ps: net user /Y /add $env:winrm_user $env:winrm_password
- ps: net localgroup administrators $env:winrm_user /add
- ps: $env:PATH="C:\OpenSSL-Win64\bin;$env:PATH"
- ps: Import-Module $env:APPVEYOR_BUILD_FOLDER\test\appveyor\WinrmAppveyor.psm1
- ps: New-ClientCertificate $env:winrm_user $env:APPVEYOR_BUILD_FOLDER
- ps: $env:user_cert_thumb = (Import-pfxCertificate -FilePath $env:user_pfx -CertStoreLocation Cert:\LocalMachine\root).Thumbprint
- ps: Import-pfxCertificate -FilePath $env:user_pfx -CertStoreLocation Cert:\LocalMachine\TrustedPeople
- ps: $env:winrm_cert = (New-SelfSignedCertificate -DnsName localhost -CertStoreLocation cert:\localmachine\my).Thumbprint
- ps: winrm create winrm/config/Listener?Address=*+Transport=HTTPS "@{Hostname=`"localhost`";CertificateThumbprint=`"$($env:winrm_cert)`"}"
- ps: winrm set winrm/config/client/auth '@{Basic="true"}'
- ps: winrm set winrm/config/service/auth '@{Basic="true"}'
- ps: winrm set winrm/config/service/auth '@{Certificate="true"}'
- ps: winrm set winrm/config/service/auth '@{CbtHardeningLevel="Strict"}'
- ps: winrm set winrm/config/service '@{AllowUnencrypted="true"}'
- ps: New-WinrmUserCertificateMapping $env:user_cert_thumb
- ps: $env:PATH="C:\Ruby$env:ruby_version\bin;$env:PATH"
- ps: Write-Host $env:PATH
- ps: ($pwd).path
# setup ansible
- cmd: "%CYG_SETUP% -qgnNdO -l %CYG_CACHE% -R %CYG_ROOT% -s http://cygwin.mirror.constant.com -P libssl-devel -P python2-devel -P python3-devel -P curl -P python-jinja -P python-crypto -P python-openssl -P python-setuptools -P git -P libffi-devel -P libcrypt-devel -P python36-cryptography"
- cmd: "%CYG_BASH% -lc 'openssl version'"
- cmd: "%CYG_BASH% -lc 'uname -a'"
- cmd: "%CYG_BASH% -lc 'python -m ensurepip'"
- cmd: "%CYG_BASH% -lc 'python3 -m ensurepip'"
- cmd: "%CYG_BASH% -lc 'python3 -m pip install --upgrade pip'"
- cmd: "%CYG_BASH% -lc 'python3 -m pip install pywinrm'"
- cmd: "%CYG_BASH% -lc 'python3 -m pip install ansible==%ANSIBLE_VERSION%'"
- cmd: "%CYG_BASH% -lc 'ansible --version'"
- cmd: "%CYG_BASH% -lc 'echo localhost ansible_user=$winrm_user ansible_password=$winrm_password ansible_connection=winrm'"
#- cmd: "%CYG_BASH% -lc 'echo localhost ansible_user=$winrm_user ansible_password=$winrm_password ansible_connection=winrm > inventory'"
#- cmd: "%CYG_BASH% -lc 'cat inventory'"
#- cmd: "%CYG_BASH% -lc 'echo localhost ansible_user=$winrm_user ansible_password=$winrm_password ansible_connection=winrm | tee inventory'"
#- cmd: "%CYG_BASH% -lc 'cat inventory'"
#- ps: echo "localhost ansible_user=$env:winrm_user ansible_password=$env:winrm_password ansible_connection=winrm" | Out-file c:\inventory
#- ps: Get-ChildItem -Path c:\
#- ps: Get-Content -Path c:\inventory
#- ps: |
#    $filepath = "C:\inventory"
#    $Acl = Get-ACL $filepath
#    $AccessRule= New-Object System.Security.AccessControl.FileSystemAccessRule("everyone","full","none","none","Allow")
#    $Acl.AddAccessRule($AccessRule)
#    Set-Acl $filepath $Acl
- cmd: "%CYG_BASH% -lc 'ls /'"
- cmd: "%CYG_BASH% -lc 'ls -l /cygdrive/c/'"
#- cmd: "%CYG_BASH% -lc 'cat /cygdrive/c/inventory'"
- cmd: "%CYG_BASH% -lc 'ls -l /cygdrive/c/projects/ansible-win-osquery'"
- cmd: "%CYG_BASH% -lc pwd"
#- cmd: "%CYG_BASH% -lc env"
#- cmd: "%CYG_BASH% -lc 'find -ls'"
- cmd: "%CYG_BASH% -lc 'ansible -i /cygdrive/c/projects/ansible-win-osquery/test/appveyor/inventory -m win_ping -vvv localhost'"
- cmd: "%CYG_BASH% -lc 'mkdir -p /etc/ansible/roles'"
- cmd: "%CYG_BASH% -lc 'cp -R /cygdrive/c/projects/ansible-win-osquery /etc/ansible/roles/juju4.win_osquery'"
- cmd: cinst -y inspec

build: off
test_script:
- cmd: "%CYG_BASH% -lc 'ansible-playbook /cygdrive/c/projects/ansible-win-osquery/test/integration/%SUITE%/default.yml --syntax-check'"
- cmd: "%CYG_BASH% -lc 'ansible-playbook -i /cygdrive/c/projects/ansible-win-osquery/test/appveyor/inventory /cygdrive/c/projects/ansible-win-osquery/test/integration/%SUITE%/default.yml -vvv $ANSIBLE_EXTRA_VARS'"

after_test:
# Test idempotence
#    %CYG_BASH% -lc 'ansible-playbook -i /cygdrive/c/projects/ansible-win-osquery/test/appveyor/inventory /cygdrive/c/projects/ansible-win-osquery/test/integration/%SUITE%/default.yml $ANSIBLE_EXTRA_VARS | tee /tmp/idempotency.log | grep -q "changed=0.*failed=0" && (echo "Idempotence test: pass" && exit 0) || (echo "Idempotence test: fail" && cat /tmp/idempotency.log && exit 0)'
- cmd: |
    %CYG_BASH% -lc 'ansible-playbook -i /cygdrive/c/projects/ansible-win-osquery/test/appveyor/inventory /cygdrive/c/projects/ansible-win-osquery/test/integration/%SUITE%/default.yml $ANSIBLE_EXTRA_VARS'

on_finish:
- ps: Get-Content "C:\Program Files\osquery\osquery.conf" -ReadCount 1000
- ps: Get-Service -Displayname "*osquery*"
- ps: Get-Process "*osquery*"
- ps: Get-Acl -Path "C:\Program Files\osquery" | Format-Table -Wrap
- ps: Get-Acl -Path "C:\Program Files\osquery\log" | Format-Table -Wrap
- ps: Get-Acl -Path "C:\ProgramData\osquery\osquery.db" | Format-Table -Wrap
- ps: Get-ChildItem -Path "C:\Program Files\osquery"
- ps: Get-ChildItem -Path "C:\Program Files\osquery\packs"
- ps: Get-ChildItem -Path "C:\Program Files\osquery\log"
- cmd: '"C:\Program Files\osquery\osqueryi.exe" --line "SELECT version, build, platform FROM os_version;"'
- cmd: '"C:\Program Files\osquery\osqueryi.exe" --line "SELECT version from osquery_info;"'
#- ps: get-wmiobject Win32_product | ft IdentifyingNumber,Name
#- ps: Get-ChildItem -Path "HKLM:Software\Microsoft\Windows\CurrentVersion\Uninstall"
- ps: Get-ChildItem -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WINEVT\Channels" -Include *osquery*
- cmd: wevtutil gl osquery
- ps: |
    Get-WinEvent -FilterHashtable @{Logname='osquery'} | select-string -Pattern "failed" -AllMatches | Ft -Property Message -autosize -wrap
    Get-WinEvent -FilterHashtable @{Logname='osquery'} | select-string -Pattern "EnableLUA" -AllMatches | Ft -Property Message -autosize -wrap
    Get-WinEvent -FilterHashtable @{Logname='osquery'} | select-string -Pattern "ShowOLEPackageObj" -AllMatches | Ft -Property Message -autosize -wrap
    Get-WinEvent -FilterHashtable @{Logname='osquery'} | select-string -Pattern "DownloadRestrictions" -AllMatches | Ft -Property Message -autosize -wrap
    True
- ps: |
    Get-WinEvent -FilterHashtable @{Logname='osquery'} | Select-Object -Property Message | ConvertFrom-Json | Select name | Group-Object name | Ft -autosize -wrap
    True
- ps: |
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "failed" }
    True
- ps: |
    #Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "\"pack_windows-hardening_UAC_Disabled\"" }
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "pack_windows-hardening_UAC_Disabled" }
    True
- ps: |
    #Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "\"pack_osquery-msoffice-pack_ShowOLEPackageObj\"" }
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "pack_osquery-msoffice-pack_ShowOLEPackageObj" }
    True
- ps: |
    #Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "\"pack_osquery-chrome-pack_DownloadRestrictions\"" }
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "pack_osquery-chrome-pack_DownloadRestrictions" }
    True
- ps: |
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "pack_win_autoexec" }
    True
- ps: |
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "pack_win_etc_hosts" }
    True
- ps: |
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "pack_win_services" }
    True
- ps: |
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "pack_os_version" }
    True
- ps: |
    Get-Content c:\osquery-events.csv -ReadCount 1000 | foreach { $_ -match "system_info" }
    True
- cmd: c:\opscode\inspec\bin\inspec.bat exec https://github.com/juju4/inspec-osquery/archive/master.tar.gz || exit 0

notifications:
- provider: Email
  to:
  - nobody@nowhere.com
  on_build_success: false
  on_build_failure: false
  on_build_status_changed: false
